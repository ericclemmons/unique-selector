[
  {
    "kind": "index",
    "content": "unique-selector\n===============\n\n[![Build Status](https://travis-ci.org/ericclemmons/unique-selector.png)](https://travis-ci.org/ericclemmons/unique-selector)\n[![CocoaPods](https://img.shields.io/cocoapods/l/AFNetworking.svg)]()\n[![semantic-versioning](https://img.shields.io/badge/semantic%20-versioning-green.svg)]()\n\nGiven a DOM node, return a unique CSS selector matching only that element.\nThis is particularly useful when tracking in custom variables in analytics:\n\n\n    document.addEventListener('click', function(event) {\n        var selector = unique(event.target);\n\n        _gaq.push(['_trackEvent', 'Engagement', 'Click', selector]);\n    }, false);\n\n\nInstallation\n------------\n\n[![NPM](https://nodei.co/npm/unique-selector.png?mini=true)](https://nodei.co/npm/unique-selector/)\n\nOptions\n------------\ne.g.1 DomElement = `<span id=\"test\"></span>`\n\n```\nimport unique from 'unique-selector';\n\n// Optional Options\noptions = {\n    // Array of selector types based on which the unique selector will generate\n    selectorTypes : [ 'ID', 'Class', 'Tag', 'NthChild' ]\n}\n\nunique( DomElement, options ); // #test\n```\n\ne.g.2 DomElement = `<span test=\"2\"></span>`\n\n```\nimport unique from 'unique-selector';\n\n// Optional Options\noptions = {\n    // Array of selector types based on which the unique selector will be generate\n    selectorTypes : [ 'Attributes' ]\n}\n\nunique( DomElement, options ); // [test=\"2\"]\n```\n\ne.g.3 DomElement = `<div id=\"xyz\" class=\"abc test\"></div>`\n\n```\nimport unique from 'unique-selector';\n\n// Optional Options\noptions = {\n    // Regular expression of ID and class names to ignore\n    excludeRegex : RegExp( 'xyz|abc' )\n}\n\nunique( DomElement, options ); // .test\n```\n\n\nTests\n-----\n\n    $ npm run test\n\n\nContributing\n-----\nFeel free to open issues, make suggestions or send PRs.\nThis project adheres to the Contributor Covenant [code of conduct](http://contributor-covenant.org/). By participating, you are expected to uphold this code.\n\n\nContact\n-----\n\nAvraam Mavridis : [@avraamakis](https://twitter.com/avraamakis)\n\nEric Clemmons : [@ericclemmons](https://twitter.com/ericclemmons)\n\n\nReleases\n--------\n- v0.1.0\n\n    - Big refactor/rewrite using es6\n    - More test + Change the test script\n    - Script to compile es6 to es5 using babel\n    - Ability to pass options for the **selectorTypes** based on which the unique selector will be generated, see the options\n\n\n- v0.0.4\n\n    - Handle extra whitespace in `className` ([#9](https://github.com/ericclemmons/unique-selector/pull/9))\n\n- v0.0.3\n\n    - Add support for various `<form>` elements ([#2](https://github.com/ericclemmons/unique-selector/issues/2))\n\n- v0.0.2\n\n    - Fix bug with `nth-child` calculation\n\n- v0.0.1\n\n    - Initial release\n\n\n\nLicense\n-------\n\nMIT\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/AvraamMavridis/unique-selector/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n",
    "longname": "/Users/yawjosephetse/Developer/github/jewelml/unique-selector/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "content": "unique-selector\n===============\n\n[![Build Status](https://travis-ci.org/ericclemmons/unique-selector.png)](https://travis-ci.org/ericclemmons/unique-selector)\n[![CocoaPods](https://img.shields.io/cocoapods/l/AFNetworking.svg)]()\n[![semantic-versioning](https://img.shields.io/badge/semantic%20-versioning-green.svg)]()\n\nGiven a DOM node, return a unique CSS selector matching only that element.\nThis is particularly useful when tracking in custom variables in analytics:\n\n\n    document.addEventListener('click', function(event) {\n        var selector = unique(event.target);\n\n        _gaq.push(['_trackEvent', 'Engagement', 'Click', selector]);\n    }, false);\n\n\nInstallation\n------------\n\n[![NPM](https://nodei.co/npm/unique-selector.png?mini=true)](https://nodei.co/npm/unique-selector/)\n\nOptions\n------------\ne.g.1 DomElement = `<span id=\"test\"></span>`\n\n```\nimport unique from 'unique-selector';\n\n// Optional Options\noptions = {\n    // Array of selector types based on which the unique selector will generate\n    selectorTypes : [ 'ID', 'Class', 'Tag', 'NthChild' ]\n}\n\nunique( DomElement, options ); // #test\n```\n\ne.g.2 DomElement = `<span test=\"2\"></span>`\n\n```\nimport unique from 'unique-selector';\n\n// Optional Options\noptions = {\n    // Array of selector types based on which the unique selector will be generate\n    selectorTypes : [ 'Attributes' ]\n}\n\nunique( DomElement, options ); // [test=\"2\"]\n```\n\ne.g.3 DomElement = `<div id=\"xyz\" class=\"abc test\"></div>`\n\n```\nimport unique from 'unique-selector';\n\n// Optional Options\noptions = {\n    // Regular expression of ID and class names to ignore\n    excludeRegex : RegExp( 'xyz|abc' )\n}\n\nunique( DomElement, options ); // .test\n```\n\n\nTests\n-----\n\n    $ npm run test\n\n\nContributing\n-----\nFeel free to open issues, make suggestions or send PRs.\nThis project adheres to the Contributor Covenant [code of conduct](http://contributor-covenant.org/). By participating, you are expected to uphold this code.\n\n\nContact\n-----\n\nAvraam Mavridis : [@avraamakis](https://twitter.com/avraamakis)\n\nEric Clemmons : [@ericclemmons](https://twitter.com/ericclemmons)\n\n\nReleases\n--------\n- v0.1.0\n\n    - Big refactor/rewrite using es6\n    - More test + Change the test script\n    - Script to compile es6 to es5 using babel\n    - Ability to pass options for the **selectorTypes** based on which the unique selector will be generated, see the options\n\n\n- v0.0.4\n\n    - Handle extra whitespace in `className` ([#9](https://github.com/ericclemmons/unique-selector/pull/9))\n\n- v0.0.3\n\n    - Add support for various `<form>` elements ([#2](https://github.com/ericclemmons/unique-selector/issues/2))\n\n- v0.0.2\n\n    - Fix bug with `nth-child` calculation\n\n- v0.0.1\n\n    - Initial release\n\n\n\nLicense\n-------\n\nMIT\n\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/AvraamMavridis/unique-selector/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n",
    "longname": "/Users/yawjosephetse/Developer/github/jewelml/unique-selector/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "/Users/yawjosephetse/Developer/github/jewelml/unique-selector/manual/asset",
    "name": "./manual/asset",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/yawjosephetse/Developer/github/jewelml/unique-selector/manual/overview.md",
    "name": "./manual/overview.md",
    "content": "# Overview\r\n\r\nAll of the model building classes are structured similarly to ml.js models. Each model has three shared components regardless if it's a regression, classification or time series model.\r\n\r\nThis library was built to quickly implement [Tensorflow](https://js.tensorflow.org) and [Keras](https://js.tensorflow.org/tutorials/import-keras.html) models in JavaScript.\r\n\r\n## Configuration\r\n\r\nAll of the model configuration is managed during creating an instance of the class. All models have `fit` and `compile` properties that are assigned to the instance `settings` property.\r\n\r\nYou can also pass the Tensorflow reference to be used, as a configuration property if you want to use the compiled C++ or GPU via CUDA versions on the `tf` property;\r\n\r\n* `this.settings.compile` is passed to `tensorflow.model.compile` and contains the configuration for optimizers ([`read more`](https://js.tensorflow.org/api/latest/#tf.Model.compile)).\r\n* `this.settings.fit` is passed to `tensorflow.model.fit` and contains the configuration for model fitting ([`read more`](https://js.tensorflow.org/api/latest/#tf.Sequential.fit))\r\n\r\n### Model constructor example\r\n\r\n```javascript\r\nimport { MultipleLinearRegression, } from 'tensorscript';\r\nimport tf from '@tensorflow/tfjs-node-gpu';\r\n\r\nconst MLR = new MultipleLinearRegression({\r\n  fit:{\r\n    epochs:500,\r\n    batchSize:5,\r\n  },\r\n  compile:{\r\n    loss: 'meanSquaredError',\r\n    optimizer: 'adam',\r\n  },\r\n},{\r\n  tf,\r\n});\r\n```\r\n\r\nEach constructor takes two parameters `settings` and `properties`. As in the example above, *settings* are used to configure tensorflow objects and properties are used to configure tensorscript (like which version of tensorflow to use).\r\n\r\n## Training\r\n\r\nAll tensorflow models train asynchronously, therefore all tensorscript model train functions are all asynchronous. Always pass dependent and independent variables as matrix inputs.\r\n\r\nTime series models can be trained with only one input matrix.\r\n\r\n### Training example\r\n\r\n```javascript\r\n\r\nimport { MultipleLinearRegression, } from 'tensorscript';\r\n\r\nasync function main(){\r\n  const MLR = new MultipleLinearRegression();\r\n  const x = [ [1], [2] ];\r\n  const y = [ [3], [4] ];\r\n  await MLR.train(x,y);\r\n}\r\n```\r\n\r\n## Predicting\r\n\r\nAll prediction inputs must be the same shape as training inputs. TensorScript provides an asynchronous predict method that converts tensor values to javascript objects. If you want the tensor from tensorflow, use the calculate method instead.\r\n\r\n### Predicting example\r\n\r\n```javascript\r\nimport { MultipleLinearRegression, } from 'tensorscript';\r\n\r\nasync function main(){\r\n  const MLR = new MultipleLinearRegression();\r\n  const x = [ [1], [2] ];\r\n  const y = [ [3], [4] ];\r\n  await MLR.train(x,y);\r\n\r\n  await MLR.predict([[3]]) //=> [[5]];\r\n  const tensorPrediction = await MLR.calculate([[3]]) //=> [[5]];\r\n  tensorPrediction.data()\r\n    .then(tensors=> /*Typed Array*/)\r\n}\r\n```\r\n\r\n## Examples\r\n\r\nFor more examples on how to do feature scaling and more, check out the *[Examples folder](https://github.com/repetere/tensorscript/tree/master/manual/examples)*.",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/yawjosephetse/Developer/github/jewelml/unique-selector/manual/usage.md",
    "name": "./manual/usage.md",
    "content": "# Frequently Asked Questions\r\n\r\n## Scaling\r\n\r\n- **How do I scale and descale my inputs?**\r\n  - The library is only for model create, data engineering and modeling is typically handled elsewhere\r\n  - Check out the regression examples (hint: use [ModelScript](https://repetere.github.io/modelscript/)).\r\n- **How do I cross validate, test/train split, K-fold, etc?**\r\n  - (See above) The library is only for model create, data engineering and modeling is typically handled elsewhere\r\n  - Check out the code examples (hint: use [ModelScript](https://repetere.github.io/modelscript/)).",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/yawjosephetse/Developer/github/jewelml/unique-selector/manual/faq.md",
    "name": "./manual/faq.md",
    "content": "# Frequently Asked Questions\r\n\r\n## Scaling\r\n\r\n- **How do I scale and descale my inputs?**\r\n  - The library is only for model create, data engineering and modeling is typically handled elsewhere\r\n  - Check out the regression examples (hint: use [ModelScript](https://repetere.github.io/modelscript/)).\r\n- **How do I cross validate, test/train split, K-fold, etc?**\r\n  - (See above) The library is only for model create, data engineering and modeling is typically handled elsewhere\r\n  - Check out the code examples (hint: use [ModelScript](https://repetere.github.io/modelscript/)).",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/yawjosephetse/Developer/github/jewelml/unique-selector/CHANGELOG.md",
    "name": "./CHANGELOG.md",
    "content": "# Changelog\n\n## 1.0.0 (2018-07-30)\n\n- **Feat**\n  - First Initial Release\n- **Fix**\n  - N/A\n- **Chore**\n  - Allow for multistep future forecasts in multivariate timeseries.\n  - Add basic clustering example.\n",
    "static": true,
    "access": "public"
  }
]